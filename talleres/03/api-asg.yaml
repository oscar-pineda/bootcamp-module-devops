AWSTemplateFormatVersion: 2010-09-09
Description: API de Mythical Mysfits con Auto Scaling Groups.

Mappings:
  RegionMap:
    us-east-1:
      "AmiId": "ami-09d95fab7fff3776c"
    us-east-2:
      "AmiId": "ami-026dea5602e368e96"
    us-west-2:
      "AmiId": "ami-0e34e7b9ca0ace12d"

Resources:
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MythicalMysfitsLB
      GroupDescription: Load Balancer
      # Ingress rules
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      # SecurityGroupEgress:
      # - IpProtocol: tcp
      #   FromPort: 0
      #   ToPort: 65535
      #   CidrIp: 0.0.0.0/0
  InstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MythicalMysfitsInstance
      GroupDescription: Instances
      # Ingress rules
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8000
        ToPort: 8000
        SourceSecurityGroupName: !Ref LoadBalancerSG
      # SecurityGroupEgress:
      # - IpProtocol: tcp
      #   FromPort: 0
      #   ToPort: 65535
      #   CidrIp: 0.0.0.0/0
  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt LoadBalancerSG.GroupId
      AvailabilityZones: !GetAZs
      # Listeners
      Listeners:
        - InstancePort: '8000'
          InstanceProtocol: HTTP
          LoadBalancerPort: '80'
          Protocol: HTTP
      # HealthCheck
      HealthCheck:
        Target: HTTP:8000/
        HealthyThreshold: '2'
        UnhealthyThreshold: '3'
        Interval: '30'
        Timeout: '10'
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref AWS::Region
        - AmiId
      InstanceType: t2.micro
      KeyName: mythical-mysfits
      SecurityGroups:
        - !GetAtt InstanceSG.GroupId
      # UserData
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          yum update -y
          yum install -y git python37
          cd /root/
          curl -O https://bootstrap.pypa.io/get-pip.py
          python3 get-pip.py
          git clone https://github.com/eloyvega/bootcamp-module-devops.git
          cd ~/bootcamp-module-devops/backend/
          pip install -r requirements.txt
          nohup gunicorn -w 3 -b 0.0.0.0:8000 app:app &
  # AutoScalingGroup:
  InstancesAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs
      LaunchConfigurationName: !Ref LaunchConfiguration
      LoadBalancerNames:
        - !Ref LoadBalancer
      MinSize: '1'
      MaxSize: '1'
      DesiredCapacity: '1'